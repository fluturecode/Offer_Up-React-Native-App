{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/lizeidelson/Desktop/elizabeth/myApps/ReactNative-DemoApp/App.js\";\nimport React, { useEffect, useState } from \"react\";\nimport * as ImagePicker from \"expo-image-picker\";\nimport Screen from \"./app/components/Screen\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Image from \"react-native-web/dist/exports/Image\";\nexport default function App() {\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      imageUri = _useState2[0],\n      setImageUri = _useState2[1];\n\n  var requestPermission = function requestPermission() {\n    var _await$ImagePicker$re, granted;\n\n    return _regeneratorRuntime.async(function requestPermission$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.requestCameraRollPermissionsAsync());\n\n          case 2:\n            _await$ImagePicker$re = _context.sent;\n            granted = _await$ImagePicker$re.granted;\n            if (!granted) alert(\"You need to enable permissions to access.\");\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    requestPermission();\n  }, []);\n\n  var selectImage = function selectImage() {\n    var result;\n    return _regeneratorRuntime.async(function selectImage$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync());\n\n          case 3:\n            result = _context2.sent;\n            if (!result.cancelled) setImageUri(result.uri);\n            _context2.next = 10;\n            break;\n\n          case 7:\n            _context2.prev = 7;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.log(\"Error reading image\", _context2.t0);\n\n          case 10:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n\n  return React.createElement(Screen, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 3\n    }\n  }, React.createElement(Button, {\n    title: \"Select Image\",\n    onPress: selectImage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 4\n    }\n  }), React.createElement(Image, {\n    source: {\n      uri: imageUri\n    },\n    style: {\n      width: 200,\n      height: 200\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 4\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/lizeidelson/Desktop/elizabeth/myApps/ReactNative-DemoApp/App.js"],"names":["React","useEffect","useState","ImagePicker","Screen","App","imageUri","setImageUri","requestPermission","requestCameraRollPermissionsAsync","granted","alert","selectImage","launchImageLibraryAsync","result","cancelled","uri","console","log","width","height"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,KAAKC,WAAZ,MAA6B,mBAA7B;AACA,OAAOC,MAAP;;;AAGA,eAAe,SAASC,GAAT,GAAe;AAAA,kBACGH,QAAQ,EADX;AAAA;AAAA,MACtBI,QADsB;AAAA,MACZC,WADY;;AAE7B,MAAMC,iBAAiB,GAAG,SAApBA,iBAAoB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACCL,WAAW,CAACM,iCAAZ,EADD;;AAAA;AAAA;AACjBC,YAAAA,OADiB,yBACjBA,OADiB;AAEzB,gBAAI,CAACA,OAAL,EAAcC,KAAK,CAAC,2CAAD,CAAL;;AAFW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA1B;;AAKAV,EAAAA,SAAS,CAAC,YAAM;AACfO,IAAAA,iBAAiB;AACjB,GAFQ,EAEN,EAFM,CAAT;;AAIA,MAAMI,WAAW,GAAG,SAAdA,WAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEGT,WAAW,CAACU,uBAAZ,EAFH;;AAAA;AAEZC,YAAAA,MAFY;AAGlB,gBAAI,CAACA,MAAM,CAACC,SAAZ,EAAuBR,WAAW,CAACO,MAAM,CAACE,GAAR,CAAX;AAHL;AAAA;;AAAA;AAAA;AAAA;AAKlBC,YAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;;AALkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAApB;;AASA,SACC,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,cAAd;AAA6B,IAAA,OAAO,EAAEN,WAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,EAEC,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAE;AAAEI,MAAAA,GAAG,EAAEV;AAAP,KAAf;AAAkC,IAAA,KAAK,EAAE;AAAEa,MAAAA,KAAK,EAAE,GAAT;AAAcC,MAAAA,MAAM,EAAE;AAAtB,KAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFD,CADD;AAMA","sourcesContent":["import React, { useEffect, useState } from \"react\"\nimport * as ImagePicker from \"expo-image-picker\"\nimport Screen from \"./app/components/Screen\"\nimport { Button, Image } from \"react-native\"\n\nexport default function App() {\n\tconst [imageUri, setImageUri] = useState()\n\tconst requestPermission = async () => {\n\t\tconst { granted } = await ImagePicker.requestCameraRollPermissionsAsync()\n\t\tif (!granted) alert(\"You need to enable permissions to access.\")\n\t}\n\n\tuseEffect(() => {\n\t\trequestPermission()\n\t}, [])\n\n\tconst selectImage = async () => {\n\t\ttry {\n\t\t\tconst result = await ImagePicker.launchImageLibraryAsync()\n\t\t\tif (!result.cancelled) setImageUri(result.uri)\n\t\t} catch (error) {\n\t\t\tconsole.log(\"Error reading image\", error)\n\t\t}\n\t}\n\n\treturn (\n\t\t<Screen>\n\t\t\t<Button title='Select Image' onPress={selectImage} />\n\t\t\t<Image source={{ uri: imageUri }} style={{ width: 200, height: 200 }} />\n\t\t</Screen>\n\t)\n}\n"]},"metadata":{},"sourceType":"module"}