{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"/Users/lizeidelson/Desktop/elizabeth/myApps/ReactNative-DemoApp/App.js\";\nimport React from \"react\";\nimport * as ImagePicker from \"expo-image-picker\";\nimport * as Permissions from \"expo-permissions\";\nimport Screen from \"./app/components/Screen\";\nexport default function App() {\n  var requestPermission = function requestPermission() {\n    var _await$ImagePicker$re, granted;\n\n    return _regeneratorRuntime.async(function requestPermission$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.requestCameraRollPermissionsAsync());\n\n          case 2:\n            _await$ImagePicker$re = _context.sent;\n            granted = _await$ImagePicker$re.granted;\n            if (!granted) alert(\"You need to enable permissions to access.\");\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    requestPermission();\n  }, []);\n\n  var selectImage = function selectImage() {\n    ImagePicker.la;\n  };\n\n  return React.createElement(Screen, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 3\n    }\n  }, React.createElement(Button, {\n    title: \"Select Image\",\n    onPress: selectImage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 4\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/lizeidelson/Desktop/elizabeth/myApps/ReactNative-DemoApp/App.js"],"names":["React","ImagePicker","Permissions","Screen","App","requestPermission","requestCameraRollPermissionsAsync","granted","alert","useEffect","selectImage","la"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,WAAZ,MAA6B,mBAA7B;AACA,OAAO,KAAKC,WAAZ,MAA6B,kBAA7B;AACA,OAAOC,MAAP;AAEA,eAAe,SAASC,GAAT,GAAe;AAC7B,MAAMC,iBAAiB,GAAG,SAApBA,iBAAoB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACCJ,WAAW,CAACK,iCAAZ,EADD;;AAAA;AAAA;AACjBC,YAAAA,OADiB,yBACjBA,OADiB;AAEzB,gBAAI,CAACA,OAAL,EAAcC,KAAK,CAAC,2CAAD,CAAL;;AAFW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA1B;;AAKAC,EAAAA,SAAS,CAAC,YAAM;AACfJ,IAAAA,iBAAiB;AACjB,GAFQ,EAEN,EAFM,CAAT;;AAIA,MAAMK,WAAW,GAAG,SAAdA,WAAc,GAAM;AACzBT,IAAAA,WAAW,CAACU,EAAZ;AACA,GAFD;;AAIA,SACC,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,cAAd;AAA6B,IAAA,OAAO,EAAED,WAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADD;AAKA","sourcesContent":["import React from \"react\"\nimport * as ImagePicker from \"expo-image-picker\"\nimport * as Permissions from \"expo-permissions\"\nimport Screen from \"./app/components/Screen\"\n\nexport default function App() {\n\tconst requestPermission = async () => {\n\t\tconst { granted } = await ImagePicker.requestCameraRollPermissionsAsync()\n\t\tif (!granted) alert(\"You need to enable permissions to access.\")\n\t}\n\n\tuseEffect(() => {\n\t\trequestPermission()\n\t}, [])\n\n\tconst selectImage = () => {\n\t\tImagePicker.la\n\t}\n\n\treturn (\n\t\t<Screen>\n\t\t\t<Button title='Select Image' onPress={selectImage} />\n\t\t</Screen>\n\t)\n}\n"]},"metadata":{},"sourceType":"module"}